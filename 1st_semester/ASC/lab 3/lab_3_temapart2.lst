     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exis\ts even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 FA                          a db -6
    14 00000001 A700                        b dw 167
    15 00000003 01FFFFFF                    c dd -255
    16                                  ;c+a+b+b+a
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 8B0D[03000000]                  mov ecx,[c];ecx=c
    21 00000006 A0[00000000]                    mov al,[a];al=a
    22 0000000B 6698                            cbw     ;ax=a
    23 0000000D 98                              cwde    ;eax=a
    24 0000000E 01C1                            add ecx,eax;ecx=c+a
    25                                          
    26 00000010 66A1[01000000]                  mov ax,[b];ax=b
    27 00000016 98                              cwde      ;eax=b
    28 00000017 01C1                            add ecx,eax;ecx=c+a+b
    29 00000019 01C1                            add ecx,eax;ecx=c+a+b+b
    30                                          
    31 0000001B A0[00000000]                    mov al,[a];al=a
    32 00000020 6698                            cbw     ;ax=a
    33 00000022 98                              cwde    ;eax=a
    34 00000023 01C1                            add ecx,eax;ecx=c+a+b+b+a
    35                                          ; exit(0)
    36 00000025 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 00000027 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
