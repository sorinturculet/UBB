     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  
     5                                  ; declare external functions needed by our program
     6                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     7                                  extern _printf
     8                                  extern _scanf
     9                                  global _cuvantasmWord
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 2573000000000000            format dd "%s",0
    14 00000008 00000000                    n dd 0
    15 0000000C 00<rept>                    cuvant times 101 db 0
    16 00000071 03000000                    testi dd 3
    17 00000075 42616720706C20696E-         testprop db 'Bag pl in morti.',0
    17 0000007E 206D6F7274692E00   
    18                                  ; our code starts here
    19                                  segment code public use32 class=code
    20                                      _cuvantasmWord:
    21                                              ; creare cadru de stiva pentru programul apelat
    22 00000000 55                              push ebp
    23 00000001 89E5                            mov ebp, esp
    24                                  
    25 00000003 B9[71000000]                    mov ecx,testi; i
    26 00000008 BB[75000000]                    mov ebx,testprop;`adresa sirului din care extrag cuvinte
    27                                                 
    28                                          repeta:
    29 0000000D 83F901                          cmp ecx,1
    30 00000010 7409                            jz foundword
    31                                              
    32                                              cautarespatiu: ;cuvintele sunt separate prin spatiu
    33 00000012 803B20                              cmp [ebx],byte ' '
    34 00000015 43                                  inc ebx
    35 00000016 75FA                                jnz cautarespatiu
    36                                              
    37 00000018 49                              dec ecx
    38 00000019 EBF2                            jmp repeta
    39                                          
    40                                          foundword:
    41 0000001B 89DE                                mov esi,ebx
    42 0000001D BF[0C000000]                        mov edi,cuvant
    43 00000022 A4                              movsb
    44 00000023 803E20                          cmp [esi],byte ' '
    45 00000026 75F3                            jnz foundword
    46 00000028 803E2E                          cmp [esi],byte '.'
    47 0000002B 75EE                            jnz foundword
    48                                          
    49 0000002D 89EC                            mov esp, ebp
    50 0000002F 5D                              pop ebp
    51                                          
    52 00000030 B8[0C000000]                    mov eax,cuvant;intoarcem adresa sirului rezultat
    53                                          
    54 00000035 C3                              ret
