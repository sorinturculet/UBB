     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fprintf, fclose,scanf
     8                                  import exit msvcrt.dll  
     9                                  import fopen msvcrt.dll  
    10                                  import fprintf msvcrt.dll
    11                                  import fclose msvcrt.dll
    12                                  import scanf msvcrt.dll
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15 00000000 766F63696C65322E74-         nume_fisier db "vocile2.txt",0
    15 00000009 787400             
    16 0000000C 7700                        mod_acces db "w",0
    17 0000000E FFFFFFFF                    descriptor_fis dd -1
    18 00000012 2000                        newline db " ",0
    19 00000014 257300                      format db "%s",0
    20 00000017 00                          cuvant db 0
    21                                     
    22                                  ;Se da un nume de fisier (definit in segmentul de date). Sa se creeze un fisier cu numele dat, apoi sa se citeasca de la tastatura cuvinte pana cand se citeste de la tastatura caracterul '$'. Sa se scrie in fisier d
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                      
    27 00000000 C605[00000000]03                mov byte[nume_fisier],3
    28 00000007 68[0C000000]                    push dword mod_acces
    29 0000000C 68[00000000]                    push dword nume_fisier
    30 00000011 FF15[00000000]                  call [fopen]
    31 00000017 83C408                          add esp,4*2 ;cream fisierul
    32                                          
    33 0000001A A3[0E000000]                     mov [descriptor_fis], eax   ; salvam valoarea returnata de fopen in variabila descriptor_fis
    34                                          
    35                                          ; verificam daca functia fopen a creat cu succes fisierul (daca EAX != 0)
    36 0000001F 83F800                          cmp eax, 0
    37 00000022 7469                            je final
    38                                          
    39                                          repeta:
    40 00000024 68[17000000]                        push dword cuvant
    41 00000029 68[14000000]                        push dword format
    42 0000002E FF15[00000000]                      call [scanf]
    43                                              
    44 00000034 803D[17000000]24                    cmp byte [cuvant],'$'
    45 0000003B 7441                                    je inchidere
    46 0000003D BE[17000000]                        mov esi,cuvant
    47                                                  repeta2:
    48 00000042 803E00                                   cmp byte[esi],0
    49 00000045 7435                                        je nowrite
    50 00000047 803E30                                   cmp byte[esi],'0'
    51 0000004A 72F6                                        jb repeta2
    52 0000004C 803E39                                   cmp byte[esi],'9'
    53 0000004F 7603                                        jbe write
    54 00000051 46                                      inc esi
    55 00000052 EBEE                                    jmp repeta2
    56                                                  
    57                                              write:
    58 00000054 68[17000000]                        push dword cuvant
    59 00000059 FF35[0E000000]                      push dword [descriptor_fis]
    60 0000005F FF15[00000000]                      call [fprintf]
    61 00000065 83C408                              add esp, 4*2
    62                                              
    63 00000068 68[12000000]                        push dword newline
    64 0000006D FF35[0E000000]                      push dword [descriptor_fis]
    65 00000073 FF15[00000000]                      call [fprintf]
    66 00000079 83C408                              add esp, 4*2
    67                                              nowrite:
    68                                       
    69 0000007C EBA6                            jmp repeta
    70                                          
    71                                          inchidere:
    72                                          ; apelam functia fclose pentru a inchide fisierul
    73                                          ; fclose(descriptor_fis)
    74 0000007E FF35[0E000000]                  push dword [descriptor_fis]
    75 00000084 FF15[00000000]                  call [fclose]
    76 0000008A 83C404                          add esp, 4
    77                                          
    78                                          ; exit(0)
    79                                          final:
    80                                          
    81 0000008D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    82 0000008F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
