     1                                  ;(a-b+c)-(d+d)
     2                                  bits 32 ; assembling for the 32 bits architecture
     3                                  
     4                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     5                                  global start        
     6                                  
     7                                  ; declare external functions needed by our program
     8                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14 00000000 0400                        a dw 4
    15 00000002 0500                        b dw 5
    16 00000004 0700                        c dw 7
    17 00000006 0900                        d dw 9
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                              
    24 00000000 66A1[00000000]                  mov AX,[a];AX=a
    25 00000006 662B05[02000000]                sub AX,[b];AX=a-b
    26 0000000D 660305[04000000]                add AX,[c];AX=a-b+c
    27                                          
    28 00000014 668B1D[06000000]                mov BX,[d];BX=d
    29 0000001B 66031D[06000000]                add BX,[d];BX=d+d
    30                                          
    31 00000022 6601D8                          add AX,BX; AX=AX-BX
    32                                          ; exit(0)
    33 00000025 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    34 00000027 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
